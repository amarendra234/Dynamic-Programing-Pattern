#include <bits/stdc++.h> 
int total_ways(vector<int>&arr,int n,int k,vector<vector<int>>&dp){
   
    if(n==0){
       if(k==0 && arr[0]==0) return 2;
    if(k==0 || k==arr[0]) return 1;
        return 0;
    }
    if(dp[n][k]!=-1){
        return dp[n][k];
    }
    int take=0;
    if (k >= arr[n]) {
        take = total_ways(arr, n - 1, k - arr[n],dp);
    }
    int not_take=total_ways(arr,n-1,k,dp);
    return dp[n][k]=(take%1000000007+not_take%1000000007)%1000000007;
}
int findWays(vector<int>& arr, int k){
    int n=arr.size();
    vector<vector<int>>dp(n+1,vector<int>(k+1,-1));
	return total_ways(arr,n-1,k,dp);
}
