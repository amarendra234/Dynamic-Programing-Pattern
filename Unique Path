class Solution {
public:
    int all_path(int i,int j,int m,int n,vector<vector<int>>&dp){
        if(i==m-1 and j==n-1){
            return 1;
        }
        if(i>=m or j>=n){
            return 0;
        }
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        return dp[i][j]=all_path(i+1,j,m,n,dp)+all_path(i,j+1,m,n,dp);
    }
    int uniquePaths(int m, int n) {
        // vector<vector<int>>dp(m,vector<int>(n,-1));
        // return all_path(0,0,m,n,dp);
        int dp[m][n];
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(i==0 or j==0){
                    dp[i][j]=1;
                }
            }
        }
        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){
                dp[i][j]=dp[i-1][j]+dp[i][j-1];
            }
        }
        return dp[m-1][n-1];
    }
};
