//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
	public:
	    int LRS(string s1,string s2,int i,int j,vector<vector<int>>dp){
	        if(i==0 or j==0){
	            return 0;
	        }
	        if(dp[i][j]!=-1){
	            return dp[i][j];
	        }
	        if(s1[i-1]==s2[j-1] and i!=j){
	            return dp[i][j]=1+LRS(s1,s2,i-1,j-1,dp);
	        }
	        return dp[i][j]=max(LRS(s1,s2,i-1,j,dp),LRS(s1,s2,i,j-1,dp));
	    }
		int LongestRepeatingSubsequence(string str){
		    // Code here
		   // vector<vector<int>>dp(str.size()+1,vector<int>(str.size()+1,-1));
		    int dp[str.size()+1][str.size()+1];
		    for(int i=0;i<=str.size();i++){
		        for(int j=0;j<=str.size();j++){
		            if(i==0 or j==0){
		                dp[i][j]=0;
		            }else if(str[i-1]==str[j-1] and i!=j){
		                dp[i][j]=1+dp[i-1][j-1];
		            }else{
		                dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
		            }
		        }
		    }
		    return dp[str.size()][str.size()];
		}

};
